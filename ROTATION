Given an ascending sorted rotated array Arr of distinct integers of size N. The array is right rotated K times. Find the value of K.

Example 1:

Input:
N = 5
Arr[] = {5, 1, 2, 3, 4}
Output: 1
Explanation: The given array is 5 1 2 3 4. 
The original sorted array is 1 2 3 4 5. 
We can see that the array was rotated 
1 times to the right.
Example 2:

Input:
N = 5
Arr[] = {1, 2, 3, 4, 5}
Output: 0
Explanation: The given array is not rotated.



/////CODE------------------------------------------------------------------------------------------------------


class Solution{
public:	
	int findKRotation(int arr[], int n) {
	    // code here
	    if(arr[0]<arr[n-1] || n<=1) return 0;
	    int s=0;
	    int e=n-1;
	    int m=s+(e-s)/2;
	    while(s<=e)
	    {
	        if(arr[m]>=arr[0])
	        {
	            s=m+1;
	        }
	        else
	        {
	            e=m-1;
	        }
	        m=s+(e-s)/2;
	    }
	    return s;
	}

};
