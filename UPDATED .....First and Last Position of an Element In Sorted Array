#include <bits/stdc++.h>
int first_occurence(vector<int> &arr, int n, int key)
{
    int start=0,first=-1;
    int end=n-1;
    int middle=start + (end-start)/2;
    while(start<=end)
    {
        if(arr[middle]==key)
        {
            first=middle;
            end=middle-1;
        }
        else if(key>arr[middle])
        {
            start=middle+1;
        }
        else
        {
            end=middle-1;
        }
        middle=start + (end-start)/2;
    }
    return first;
}

int last_occurence(vector<int> &arr, int n, int key)
{
    int start=0,last=-1;
    int end=n-1;
    int middle=start + (end-start)/2;
    while(start<=end)
    {
        if(arr[middle]==key)
        {
            last=middle;
            start=middle+1;
        }
        else if(key>arr[middle])
        {
            start=middle+1;
        }
        else
        {
            end=middle-1;
        }
        middle=start + (end-start)/2;
    }
    return last;
}




pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    pair<int,int>p;
    p.first=first_occurence(arr, n ,k);
    p.second=last_occurence(arr, n, k);
    
    return p;
}
